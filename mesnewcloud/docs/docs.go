// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-01-18 16:25:47.904594 +0800 CST m=+0.231714443

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ProOrdtemp/t": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProOrdtemp"
                ],
                "summary": "ProOrdtemp",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ProOrder"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ProOrder"
                        }
                    }
                }
            }
        },
        "/report/brushcardrecord": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "Query Order Brush Card List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tenantId",
                        "name": "tenantId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "orderCode",
                        "name": "orderCode",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "orderSort",
                        "name": "orderSort",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "currentPage",
                        "name": "currentPage",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ProOrder"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ProOrder"
                        }
                    }
                }
            }
        },
        "/report/orderstateinfo": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "Query Order Brush Card List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tenantId",
                        "name": "tenantId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "orderCode",
                        "name": "orderCode",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "orderSort",
                        "name": "orderSort",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "currentPage",
                        "name": "currentPage",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ProOrder"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ProOrder"
                        }
                    }
                }
            }
        },
        "/report/reworkrecord": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "Query Order Brush Card List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tenantId",
                        "name": "tenantId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "orderCode",
                        "name": "orderCode",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "orderSort",
                        "name": "orderSort",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "planCode",
                        "name": "planCode",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "currentPage",
                        "name": "currentPage",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ProOrder"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ProOrder"
                        }
                    }
                }
            }
        },
        "/test/t": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Demo"
                ],
                "summary": "Demo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Demotest.RtDemo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Demotest.RtDemo"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Demotest.RtDemo": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/Demotest.Testlist"
                },
                "msg": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "Demotest.Test": {
            "type": "object",
            "properties": {
                "mps": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Demotest.Testlist": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "mps": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            }
        },
        "model.ProOrder": {
            "type": "object",
            "properties": {
                "ByWay": {
                    "type": "string"
                },
                "ByWayDate": {
                    "type": "string"
                },
                "CardState": {
                    "type": "string"
                },
                "Counts": {
                    "type": "string"
                },
                "Customer": {
                    "type": "string"
                },
                "CutDate": {
                    "type": "string"
                },
                "DeliveryDate": {
                    "type": "string"
                },
                "FabricNo": {
                    "type": "string"
                },
                "Finished": {
                    "type": "string"
                },
                "IfStop": {
                    "type": "string"
                },
                "LroningDate": {
                    "type": "string"
                },
                "MesSort": {
                    "type": "string"
                },
                "Odid": {
                    "type": "integer"
                },
                "OrderCode": {
                    "type": "string"
                },
                "PackingDate": {
                    "type": "string"
                },
                "PlanDate": {
                    "type": "string"
                },
                "SewingDate": {
                    "type": "string"
                },
                "StepCode": {
                    "type": "string"
                },
                "StopRemark": {
                    "type": "string"
                },
                "StyleNo": {
                    "type": "string"
                },
                "SysCode": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
